Metadata-Version: 2.1
Name: norminette
Version: 3.3.55
Summary: Open source C files linter for 42 Network campuses
Home-page: https://github.com/42School/norminette
License: MIT Licence
Keywords: 42,norminette
Author: 42
Author-email: pedago@42.fr
Requires-Python: >=3.8.1,<4.0.0
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: Other/Proprietary License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: argparse (>=1.4.0,<2.0.0)
Project-URL: Repository, https://github.com/42School/norminette
Description-Content-Type: text/markdown

# norminette for 42 schools

## Install

Requires python3.8+ (3.8, 3.9, 3.10, 3.11)

### Directly inside your global commands

Install using pip.
```shell
python3 -m pip install --upgrade pip setuptools
python3 -m pip install norminette
```

To upgrade an existing install, use
```shell
python3 -m pip install --upgrade norminette
```

## Usage

- Runs on the current folder and any subfolder:

```
norminette
```

- Runs on the given filename(s):

```
norminette filename.[c/h]
```

- Prevents stopping on various blocking errors:

```
norminette -d
```

- Outputs all the debug logging:

```
norminette -dd
```

## Docker usage

```
docker build -t norminette .
cd ~/42/ft_printf
docker run -v $PWD:/code norminette /code
```

If you encounter an error or an incorrect output, you can:
 - Open an issue on github 
 - Post a message on the dedicated slack channel (#norminette-v3-beta)
    

Please try to include as much information as possible (the file on which it crashed, etc)

Feel free to do pull requests if you want to help as well. Make sure that run_test.sh properly runs after your modifications.

## Run for development

This new version uses poetry as a dependency manager.

If you want to contribute:

```shell
poetry install

# Run dev norminette
poetry run norminette

# Or... with virtual env
source .venv/bin/activate
norminette

# Run tests
poetry run pytest
```

